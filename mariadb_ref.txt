// creating database
create database Todo_list;
//get binto the created database
use Todo_list;
//Show table to check the table in database
show tables;
//Add table
create table user_details(user_ID INT PRIMARY KEY, user_name VARCHAR(240) NOT NULL,created_at DATE,created_by VARCHAR(240) NOT NULL,modified_at DATE,modified_by VARCHAR(240),deleted_at DATE,deleted_by VARCHAR(240) NOT NULL);
+-------------+--------------+------+-----+---------+-------+
| Field       | Type         | Null | Key | Default | Extra |
+-------------+--------------+------+-----+---------+-------+
| user_ID     | int(11)      | NO   | PRI | NULL    |       |
| user_name   | varchar(240) | NO   |     | NULL    |       |
| created_at  | date         | YES  |     | NULL    |       |
| created_by  | varchar(240) | NO   |     | NULL    |       |
| modified_at | date         | YES  |     | NULL    |       |
| modified_by | varchar(240) | YES  |     | NULL    |       |
| deleted_at  | date         | YES  |     | NULL    |       |
| deleted_by  | varchar(240) | NO   |     | NULL    |       |
+-------------+--------------+------+-----+---------+-------+
//insert column details
 insert into user_details(user_ID,user_name,created_at,created_by,modified_at,modified_by,deleted_at,deleted_by)values(1,'naveen',20230320,'naveen',20230321,'john cena',null,'none');
+---------+-----------+------------+------------+-------------+-------------+------------+------------+
| user_ID | user_name | created_at | created_by | modified_at | modified_by | deleted_at | deleted_by |
+---------+-----------+------------+------------+-------------+-------------+------------+------------+
|       1 | naveen    | 2023-03-20 | naveen     | 2023-03-21  | john cena   | NULL       | none       |
+---------+-----------+------------+------------+-------------+-------------+------------+------------+
1 row in set (0.000 sec)
//To show the created table
select * from user_details;
+---------+------------+------------+------------+-------------+-------------+------------+------------+
| user_ID | user_name  | created_at | created_by | modified_at | modified_by | deleted_at | deleted_by |
+---------+------------+------------+------------+-------------+-------------+------------+------------+
|       1 | naveen     | 2023-03-20 | naveen     | 2023-03-21  | john cena   | NULL       | none       |
|       2 | Alice      | 2023-03-20 | Alice      | 2023-03-21  | john cena   | NULL       | none       |
|       3 | Rocky bhai | 1999-07-17 | Rocky bhai | 2023-03-21  | john cena   | NULL       | none       |
|       4 | Dhoni      | 1888-07-07 | MSD        | 2020-02-06  | sachin      | NULL       | none       |
+---------+------------+------------+------------+-------------+-------------+------------+------------+


//ADD another table in same database
 create table task_list(
    -> task_ID INT PRIMARY KEY,
    -> task VARCHAR(240) NOT NULL,
    -> user_ID INT NOT NULL,
    -> foreign key(user_ID) references user_details(user_ID),
    -> created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    -> created_by VARCHAR(240),
    -> modified_at DATE,
    -> modified_by VARCHAR(240),
    -> deleted_at DATE,
    -> deleted_by VARCHAR(240));
//to the the column details
 explain task_list;
+-------------+--------------+------+-----+---------------------+-------+
| Field       | Type         | Null | Key | Default             | Extra |
+-------------+--------------+------+-----+---------------------+-------+
| task_ID     | int(11)      | NO   | PRI | NULL                |       |
| task        | varchar(240) | NO   |     | NULL                |       |
| user_ID     | int(11)      | NO   | MUL | NULL                |       |
| created_at  | datetime     | YES  |     | current_timestamp() |       |
| created_by  | varchar(240) | YES  |     | NULL                |       |
| modified_at | date         | YES  |     | NULL                |       |
| modified_by | varchar(240) | YES  |     | NULL                |       |
| deleted_at  | date         | YES  |     | NULL                |       |
| deleted_by  | varchar(240) | YES  |     | NULL                |       |
+-------------+--------------+------+-----+---------------------+-------+
//to insert column details
 insert into task_list
    -> (
    -> task_ID,
    -> task,
    -> user_ID,
    -> created_by)
    -> values
    -> (2,'come home',2,'Ram'),
    -> (3,'bye bye',3,'ghandhi'),
    -> (4,'go to office',1,'john cena');
select * from task_list;
+---------+--------------+---------+---------------------+------------+-------------+-------------+------------+------------+
| task_ID | task         | user_ID | created_at          | created_by | modified_at | modified_by | deleted_at | deleted_by |
+---------+--------------+---------+---------------------+------------+-------------+-------------+------------+------------+
|       1 | go home      |       2 | 2023-03-31 13:11:42 | Ramani     | NULL        | NULL        | NULL       | NULL       |
|       2 | come home    |       2 | 2023-03-31 13:21:02 | Ram        | NULL        | NULL        | NULL       | NULL       |
|       3 | bye bye      |       3 | 2023-03-31 13:21:02 | ghandhi    | NULL        | NULL        | NULL       | NULL       |
|       4 | go to office |       1 | 2023-03-31 13:21:02 | john cena  | NULL        | NULL        | NULL       | NULL       |
+---------+--------------+---------+---------------------+------------+-------------+-------------+------------+------------+

//to get the specified values
 select task from task_list where user_ID = 2;
+-----------+
| task      |
+-----------+
| go home   |
| come home |
+-----------+
select user_name from user_details where user_ID = 1;
+-----------+
| user_name |
+-----------+
| naveen    |
+-----------+
//To add a new column
 alter table task_list
    -> add status INT;
+---------+--------------+---------+---------------------+------------+-------------+-------------+------------+------------+--------+
| task_ID | task         | user_ID | created_at          | created_by | modified_at | modified_by | deleted_at | deleted_by | status |
+---------+--------------+---------+---------------------+------------+-------------+-------------+------------+------------+--------+
|       1 | go home      |       2 | 2023-03-31 13:11:42 | Ramani     | 2023-03-31  | NULL        | NULL       | NULL       |   NULL |
|       2 | come home    |       2 | 2023-03-31 13:21:02 | Ram        | NULL        | NULL        | NULL       | NULL       |   NULL |
|       3 | bye bye      |       3 | 2023-03-31 13:21:02 | ghandhi    | NULL        | NULL        | NULL       | NULL       |   NULL |
|       4 | go to office |       1 | 2023-03-31 13:21:02 | john cena  | NULL        | NULL        | NULL       | NULL       |   NULL |
+---------+--------------+---------+---------------------+------------+-------------+-------------+------------+------------+--------+

//Updating the table
update task_list
    -> set status = 1
    -> where task_ID = 4;
+---------+--------------+---------+---------------------+------------+-------------+-------------+------------+------------+--------+
| task_ID | task         | user_ID | created_at          | created_by | modified_at | modified_by | deleted_at | deleted_by | status |
+---------+--------------+---------+---------------------+------------+-------------+-------------+------------+------------+--------+
|       1 | go home      |       2 | 2023-03-31 13:11:42 | Ramani     | 2023-03-31  | NULL        | NULL       | NULL       |   NULL |
|       2 | come home    |       2 | 2023-03-31 13:21:02 | Ram        | NULL        | NULL        | NULL       | NULL       |   NULL |
|       3 | bye bye      |       3 | 2023-03-31 13:21:02 | ghandhi    | NULL        | NULL        | NULL       | NULL       |   NULL |
|       4 | go to office |       1 | 2023-03-31 13:21:02 | john cena  | NULL        | NULL        | NULL       | NULL       |      1 |
+---------+--------------+---------+---------------------+------------+-------------+-------------+------------+------------+--------+



///////////......................................./////////////////////////////////....................................//////////////////////
..................................................REPORT MANAGEMENT.............................................................
//create database
create database report_management;
//create table
create table students_details(ID INT PRIMARY KEY AUTO_INCREMENT,student_name VARCHAR(240));
//insert values
insert into students_details(student_name)
    -> values
    -> ('Navin'),
    -> ('Gokul'),
    -> ('Jivin'),
    -> ('Jack');
//show the table
select * from students_details;
+----+--------------+
| ID | student_name |
+----+--------------+
|  1 | Navin        |
|  2 | Gokul        |
|  3 | Jivin        |
|  4 | Jack         |
+----+--------------+

//Create another table for staff
create table staff_details(staff_ID INT PRIMARY KEY AUTO_INCREMENT, staff_name VARCHAR(240)
//Insert the staff names 
insert into staff_details(staff_name)
    -> values
    -> ('Divya'),
    -> ('karthi'),
    -> ('Poovarasan'),
    -> ('Leo');
select * from staff_details;
+----------+------------+
| staff_ID | staff_name |
+----------+------------+
|        1 | Divya      |
|        2 | karthi     |
|        3 | Poovarasan |
|        4 | Leo        |
|        5 | Krishna    |
+----------+------------+
//Create another table for subjects
create table subjects(
    -> ID INT PRIMARY KEY AUTO_INCREMENT,
    -> subject_name VARCHAR(240),
    -> subject_ID INT,
    -> staff_ID INT,
    -> FOREIGN KEY(staff_ID)REFERENCES staff_details(staff_ID));

--------------+--------------+------+-----+---------+----------------+
| Field        | Type         | Null | Key | Default | Extra          |
+--------------+--------------+------+-----+---------+----------------+
| ID           | int(11)      | NO   | PRI | NULL    | auto_increment |
| subject_name | varchar(240) | YES  |     | NULL    |                |
| subject_ID   | int(11)      | YES  |     | NULL    |                |
| staff_ID     | int(11)      | YES  | MUL | NULL    |                |
+--------------+--------------+------+-----+---------+----------------+
//Insert subjects
insert into subjects(subject_name,subject_ID,staff_ID)
    -> values
    -> ('Tamil',1,3),
    -> ('English',2,4),
    -> ('chemistry',3,2),
    -> ('Physics',4,1),
    -> ('Maths',5,5);
select * from subjects;
+----+--------------+------------+----------+
| ID | subject_name | subject_ID | staff_ID |
+----+--------------+------------+----------+
|  1 | Tamil        |          1 |        3 |
|  2 | English      |          2 |        4 |
|  3 | chemistry    |          3 |        2 |
|  4 | Physics      |          4 |        1 |
|  5 | Maths        |          5 |        5 |
+----+--------------+------------+----------+

////// Table for score
create table score(
    -> ID INT PRIMARY KEY AUTO_INCREMENT,
    -> staff_ID INT,
    -> FOREIGN KEY(staff_ID) REFERENCES staff_details(staff_ID),
    -> subject_ID INT,
    -> FOREIGN KEY(subject_ID)REFERENCES subjects(ID),
    -> student_name VARCHAR(240),
    -> student_ID INT,
    -> FOREIGN KEY(student_ID)REFERENCES students_details(ID),
    -> marks INT);


/////////Inserting into tables
insert into scores(staff_ID,subject_ID,student_name,student_ID,marks)
-> values
-> (1,4,'navin',1,35),
-> (2,3,'navin',1,50),
-> (3,1,'navin',1,80),
-> (4,2,'navin',1,75),
-> (5,5,'navin',1,88);
insert into scores(staff_ID,subject_ID,student_name,student_ID,marks)
-> values
-> (1,4,'Gokul',2,40),
-> (2,3,'Gokul',2,70),
-> (3,1,'Gokul',2,80),
-> (4,2,'Gokul',2,90),
-> (5,5,'Gokul',2,90);
insert into scores(staff_ID,subject_ID,student_name,student_ID,marks)
-> values
-> (1,4,'Jivin',3,70),
-> (2,3,'Jivin',3,80),
-> (3,1,'Jivin',3,80),
-> (4,2,'Jivin',3,100),
-> (5,5,'Jivin',3,88);
insert into scores(staff_ID,subject_ID,student_name,student_ID,marks)
-> values
-> (1,4,'Jack',4,90),
-> (2,3,'Jack',4,80),
-> (3,1,'Jack',4,80),
-> (4,2,'Jack',4,80),
-> (5,5,'Jack',4,88);

////+----+----------+------------+--------------+------------+-------+
| ID | staff_ID | subject_ID | student_name | student_ID | marks |
+----+----------+------------+--------------+------------+-------+
|  1 |        1 |          4 | navin        |          1 |    35 |
|  2 |        2 |          3 | navin        |          1 |    50 |
|  3 |        3 |          1 | navin        |          1 |    80 |
|  4 |        4 |          2 | navin        |          1 |    75 |
|  5 |        5 |          5 | navin        |          1 |    88 |
|  6 |        1 |          4 | Gokul        |          2 |    40 |
|  7 |        2 |          3 | Gokul        |          2 |    70 |
|  8 |        3 |          1 | Gokul        |          2 |    80 |
|  9 |        4 |          2 | Gokul        |          2 |    90 |
| 10 |        5 |          5 | Gokul        |          2 |    90 |
| 11 |        1 |          4 | Jivin        |          3 |    70 |
| 12 |        2 |          3 | Jivin        |          3 |    80 |
| 13 |        3 |          1 | Jivin        |          3 |    80 |
| 14 |        4 |          2 | Jivin        |          3 |   100 |
| 15 |        5 |          5 | Jivin        |          3 |    88 |
| 16 |        1 |          4 | Jack         |          4 |    90 |
| 17 |        2 |          3 | Jack         |          4 |    80 |
| 18 |        3 |          1 | Jack         |          4 |    80 |
| 19 |        4 |          2 | Jack         |          4 |    80 |
| 20 |        5 |          5 | Jack         |          4 |    88 |
+----+----------+------------+--------------+------------+-------+///////////

.............Average for each student

 SELECT student_ID,AVG(marks) AS 'Average' FROM score GROUP BY(student_ID);
+------------+---------+
| student_ID | Average |
+------------+---------+
|          1 | 65.6000 |
|          2 | 74.0000 |
|          3 | 83.6000 |
|          4 | 83.6000 |
+------------+---------+

//////////Total for each students

 SELECT student_ID, SUM(marks) FROM score GROUP BY(student_Id);
+------------+------------+
| student_ID | SUM(marks) |
+------------+------------+
|          1 |        328 |
|          2 |        370 |
|          3 |        418 |
|          4 |        418 |
+------------+------------+

//////////////Average for staff as per subjects

SELECT staff_ID,AVG(marks) AS 'Average' FROM score GROUP BY(staff_ID);
+----------+---------+
| staff_ID | Average |
+----------+---------+
|        1 | 58.7500 |
|        2 | 70.0000 |
|        3 | 80.0000 |
|        4 | 86.2500 |
|        5 | 88.5000 |
+----------+---------+

///////Rank as per students average

SELECT student_id, AVG(marks) AS avg_score, RANK() OVER (ORDER BY AVG(marks) DESC) AS rank
    ->  from score
    ->   GROUP BY student_ID
    -> ORDER BY RANK;
+------------+-----------+------+
| student_id | avg_score | rank |
+------------+-----------+------+
|          3 |   83.6000 |    1 |
|          4 |   83.6000 |    1 |
|          2 |   74.0000 |    3 |
|          1 |   65.6000 |    4 |
+------------+-----------+------+


///////RANK as per the students total marks

SELECT student_id,student_name, sum(marks) AS avg_score, RANK() OVER (ORDER BY AVG(marks) DESC) AS rank
    -> from score
    -> GROUP BY student_ID
    -> ORDER BY RANK;
+------------+--------------+-----------+------+
| student_id | student_name | avg_score | rank |
+------------+--------------+-----------+------+
|          4 | Jack         |       418 |    1 |
|          3 | Jivin        |       418 |    1 |
|          2 | Gokul        |       370 |    3 |
|          1 | navin        |       328 |    4 |
+------------+--------------+-----------+------+

////DENSE_RANK as per the students total marks

SELECT student_id,student_name, sum(marks) AS avg_score,DENSE_RANK() OVER (ORDER BY AVG(marks) DESC) AS rank
    -> from score
    -> GROUP BY student_ID
    -> ORDER BY RANK;
+------------+--------------+-----------+------+
| student_id | student_name | avg_score | rank |
+------------+--------------+-----------+------+
|          4 | Jack         |       418 |    1 |
|          3 | Jivin        |       418 |    1 |
|          2 | Gokul        |       370 |    2 |
|          1 | navin        |       328 |    3 |
+------------+--------------+-----------+------+
const express = require('express')
const exp = express()
const request = require('supertest');
const app = require('./index');
// jest.setTimeout(4000);
describe('Student Details Database', () => {
    test("Should get the students details from the database", async () => {
        await request(app).get('/getStudents').send({}).expect({"data": [
            {
                "id": 1,
                "first_name": "naveen",
                "last_name": "elango",
                "email_id": "naveen@gmail.com",
                "Mark": {
                    "ID": 1,
                    "student_id": 1,
                    "tamil": 90,
                    "english": 100,
                    "maths": 80
                }
            },
            {
                "id": 3,
                "first_name": "naveen",
                "last_name": "elango",
                "email_id": "sample@gmail.com",
                "Mark": {
                    "ID": 3,
                    "student_id": 3,
                    "tamil": 95,
                    "english": 88,
                    "maths": 92
                }
            },
            {
                "id": 4,
                "first_name": "naveen",
                "last_name": "elango",
                "email_id": "elango@gmail.com",
                "Mark": {
                    "ID": 4,
                    "student_id": 4,
                    "tamil": 40,
                    "english": 100,
                    "maths": 100
                }
            },
            {
                "id": 12,
                "first_name": "naveen",
                "last_name": "elango",
                "email_id": "samle@gmail.com",
                "Mark": {
                    "ID": 5,
                    "student_id": 12,
                    "tamil": 100,
                    "english": 100,
                    "maths": 90
                }
            },
            {
                "id": 14,
                "first_name": "naveen",
                "last_name": "elango",
                "email_id": "elan@gmail.com",
                "Mark": {
                    "ID": 6,
                    "student_id": 14,
                    "tamil": 40,
                    "english": 100,
                    "maths": 100
                }
            }
        ],
        "message": "Students name fetched successfully",
        "code": 200})
    })
//     test('should navigate to /create with input data', (done) => { 
//         // jest.setTimeout(4 * 1000);
//         request(app).post('/create').send({ 
//         "fname":"naveen",
//         "lname":"elango",
//         "email":"elango@gmail.com",
//     "marks":{
//         "tamil":40,
//         "english":100,
//         "maths":100
     
//     },
// }).expect(201)
// .end((err, res) => {
//     if (err) return done(err);
//     done();
//   });
// })
test("Check if using the proper URL", async () => {
        await request(app).get('/creat').send({
        }).expect(404)
    })
       
     test('should navigate to /getOneStudent with input data', async () => {
        await request(app).get('/getOneStudent').query({ id: 1 }).expect({
            "data": {
                "id": 1,
                "first_name": "naveen",
                "last_name": "elango",
                "email_id": "naveen@gmail.com",
                "Mark": {
                    "ID": 1,
                    "student_id": 1,
                    "tamil": 90,
                    "english": 100,
                    "maths": 80
                }
            },
            "message": "Student name fetched successfully",
            "code": 200
        })
    })

})
....................................................
test('should return message when there are no students', async () => {
  // Mock the details.getStudents() method to return an empty array
  details.getStudents = jest.fn().mockResolvedValue([]);

  // Make a request to the /showStudents endpoint
  const response = await request(app).get('/showStudents');

  // Verify the response
  expect(response.status).toBe(200);
  expect(response.body).toEqual({
    message: "There is no data to fetch from the database",
    data: null,
  });
});
....................................................................
const createDetails = async (fname, lname, email, marks) => {
  try {
    const student = await studentsDetails.create({
      first_name: fname,
      last_name: lname,
      email_id: email
    });

    const newMarksData = await Marks.create({
      tamil: marks.tamil,
      english: marks.english,
      maths: marks.maths,
      student_id: student.id
    });
    return JSON.parse(JSON.stringify(newMarksData));
  } catch (err) {
    if (err.name === 'SequelizeUniqueConstraintError') {
      // Handle the case when the email ID is repeated
      throw new Error('Email ID is already in use. Please provide a unique email ID.');
    } else {
      // Handle other errors
      throw new Error('Error Occurred on createDetails()');
    }
  }
};

